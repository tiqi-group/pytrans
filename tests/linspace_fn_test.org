#+TITLE: Linspace fn tests

* Prerequisite setup

#+BEGIN_SRC ipython :session sesh :exports both
  %matplotlib inline
  %load_ext autoreload
  %autoreload 2
  import sys
  sys.path.append("../")
  from pytrans import *
  import splitting as sp
#+END_SRC

#+RESULTS:

* Figure out a new linspace function that allows one to parameterise the smoothness of the start/stop

#+BEGIN_SRC ipython :session sesh :exports both :file figs/linspace_fn.png
    x_in = np.linspace(0,1,100)

    def linspace_fn(x):
        k0 = 0.00001
        k1 = 1
        # k2 = -1/np.log(k0/k1)
        k2 = 1
        # return 1 + k2 * np.log ( (np.exp(x) - k0) / (np.exp(x) - k1) )
        return k2*np.abs( (np.exp(x) - 1j*k0) / (np.exp(x) - 1j*k1) )

    def zpk(w, k=3, gap=1.5):
        w0 = np.exp(-k)
        w1 = np.exp(k)
        sc = 2*k
        w_resc = gap*k*(2*w - 1) # rescale from [0,1] to [-r*k, r*k]
        w_new = np.exp(w_resc)
        return 1 + np.log(np.abs( (w_new - 1j*w0)/(w_new - 1j*w1) )) / sc

    def zpk_sc(a, b, npts, k=3, gap=1.5):
        w0 = np.exp(-k)
        w1 = np.exp(k)        
        sc = 2*k
        w = np.exp(np.linspace(-gap*k, gap*k, npts))
        return a + (b-a) * (1 + np.log(np.abs( (w - 1j*w0)/(w - 1j*w1) )) / sc)

    # plt.plot(x_in, linspace_fn(x_in))
    # x_in_l = np.logspace(-4, 4, 1000)
    # plt.loglog(x_in_l, zpk(x_in_l))
    # plt.plot(x_in, zpk(x_in, 3, gap=1.5))
    npts = 100
    # plt.plot(np.linspace(0, 1, npts), zpk_sc(-10, 5, npts, k=2.5, gap=1.7))
    plt.plot(np.linspace(0, 1, npts), zpspace(-10, 5, npts, k=2.5, gap=1.7))
    plt.grid(True)
#+END_SRC

#+RESULTS:
[[file:figs/linspace_fn.png]]

